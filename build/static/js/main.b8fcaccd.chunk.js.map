{"version":3,"sources":["reportWebVitals.js","components/three/Farm.jsx","components/three/TwitterBird.jsx","components/three/utils/getRandomInt.js","components/three/utils/randomBetween.js","components/three/Feuillage.jsx","components/three/Text.jsx","components/three/Map.jsx","components/three/Disc.jsx","components/three/AmericanFlag.jsx","components/Home.jsx","components/ThreeGui.js","reducers/counter.js","reducers/isLogged.js","App.js","reducers/index.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Hut","props","group","useRef","useGLTF","nodes","materials","animations","useAnimations","actions","ref","dispose","rotation","Math","PI","position","name","material","material_2","geometry","material_1","preload","Farm","fallback","scale","Component","TwitterBird","groupbird","useState","hovered","setHover","active","setActive","useFrame","current","y","twitter","onClick","e","onPointerOver","onPointerOut","color","side","THREE","Twitter","getRandomInt","max","floor","random","randomBetween","x","numb","Feuillage","numbertrees","console","log","treepositions","i","object","z","push","grouptrees","expand","setExpand","map","d","index","mesh","castShadow","attach","args","meshPhysicalMaterial","Trees","this","treecolor","TextMesh","text","night","center","textOptions","font","parse","JSONfont","size","height","Text","location","Terrain","terraincolor","meshterrain","CornField","fieldcolor","meshfield","opacity","transparent","Road","roadcolor","Map","Vinyl","groupradio","Audio","play","defaultMaterial","defaultMaterial_1","defaultMaterial_2","defaultMaterial_3","Disc","Flag","FlagBrown","Post_Cylinder","FlagRed","BlankFlag_Cube","FlagWhite","WhiteStripes_Cube001","FlagBlue","Blue_Cube002","Stars_Plane","AmericanFlag","azimuth","currenthour","Date","getHours","daylength","round","inclination","inclinationNow","noon","total","softShadows","Rain","numberrain","rainpositions","rainNewPosX","rainNewPosZ","grouprain","useSpring","Snow","numbersnow","snowpositions","snowNewPosX","snowNewPosZ","groupsnow","Clouds","number","cloudpositions","groupclouds","receiveshadow","roughness","Lights","intensity","angle","penumbra","shadow-mapSize-width","shadow-mapSize-height","Home","state","persons","body","JSON","stringify","config","method","url","headers","data","axios","response","catch","error","style","width","backgroundColor","Sky","distance","meteo","turbidity","rayleigh","exposure","OrbitControls","minDistance","maxDistance","cloudscolor","numberclouds","snow","rain","Stars","radius","depth","count","factor","saturation","fade","ThreeGui","connect","INCREMENT_RAIN","DECREMENT_RAIN","counterReducer","trees","clouds","action","type","loggedReducer","store","combineReducers","counter","isLogged","createStore","App","handleButtonSnow","bind","handleButtonRain","setState","cloudcolors","className","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b8fcaccd.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React, { useRef, Suspense, Component } from 'react'\nimport { useGLTF, useAnimations } from \"@react-three/drei\";\n\n\n//Checker react.useRef mais dans un component\n\n\nfunction Hut(props) {\n    const group = useRef()\n    const { nodes, materials, animations } = useGLTF('scene.gltf')\n    const { actions } = useAnimations(animations, group)\n    return (\n      <group ref={group} {...props} dispose={null}>\n        <group rotation={[-Math.PI / 2, 0, 0]}>\n          <group rotation={[Math.PI / 2, 0, 0]}>\n            <group position={[-502.64, 422.99, -132.71]}>\n              <group\n                name=\"������������_��������������_2\"\n                position={[-10.87, 231.34, -23.05]}\n                rotation={[Math.PI / 2, -0.91, -Math.PI]}>\n                <group position={[13.88, -40, -33.71]} rotation={[1.77, -0.46, -2.71]}>\n                  <mesh\n                    material={materials.material_2}\n                    geometry={nodes['������������_������_����������������2_0'].geometry}\n                  />\n                </group>\n                <mesh\n                  material={materials.material_2}\n                  geometry={nodes['������������_��������������_2_����������������2_0'].geometry}\n                />\n              </group>\n              <group position={[21.39, -295, 98.38]}>\n                <mesh\n                  material={materials.material}\n                  geometry={nodes['������������_������_2_����������������_0'].geometry}\n                />\n                <mesh\n                  material={materials.material}\n                  geometry={nodes['������������_������_2_����������������_0_1'].geometry}\n                />\n              </group>\n              <group position={[-10.52, 63.66, -75.33]} rotation={[Math.PI, 0, Math.PI]}>\n                <mesh material={materials.material_1} geometry={nodes['rr_����������������1_0'].geometry} />\n              </group>\n            </group>\n          </group>\n        </group>\n      </group>\n    )\n}\n\nuseGLTF.preload('/Cottage.glb')\n    \nclass Farm extends Component {\n    constructor(props){\n        super(props)\n    }\n    render(){\n        return(\n          <Suspense fallback={null}>\n            <Hut scale={[0.03, 0.03, 0.03]} position={[5.5, 5, -20]}/>\n          </Suspense>\n        )\n    }\n}\n\nexport default Farm;","import * as THREE from 'three'\nimport React, { useRef, Suspense, Component, useState } from 'react'\nimport { useGLTF } from \"@react-three/drei\";\nimport { useFrame } from 'react-three-fiber'\n\nfunction TwitterBird(props) {\n    const groupbird = useRef()\n    const { nodes, materials } = useGLTF('twitter.glb')\n\n    const [hovered, setHover] = useState(false)\n    const [active, setActive] = useState(false)\n\n    useFrame(() => {\n        groupbird.current.rotation.y = groupbird.current.rotation.y += 0.01;\n    });\n  \n    return (\n      <group ref={groupbird} {...props} dispose={null}>\n        <mesh \n          geometry={nodes.twitter.geometry} \n          rotation={[Math.PI / 2, 0, 0]}\n          onClick={(e) => setActive(!active)}\n          onPointerOver={(e) => setHover(true)}\n          onPointerOut={(e) => setHover(false)}>\n          <meshPhysicalMaterial color={hovered ? '#9cfffd' : '#00acee'} side={THREE.DoubleSide}/>\n        </mesh>\n      </group>\n    )\n}\n\nuseGLTF.preload('/Cottage.glb')\n    \nclass Twitter extends Component {\n    constructor(props){\n        super(props)\n    }\n    render(){\n        return(\n          <Suspense fallback={null}>\n             <TwitterBird position={[100, 100, 10]} rotation={[-0.5, 0.5, 0]}/>\n          </Suspense>\n        )\n    }\n}\n\nexport default Twitter;","function getRandomInt(max) {\n    return Math.floor(Math.random() * Math.floor(max)) - Math.floor(Math.random() * Math.floor(max));\n}\nexport default getRandomInt","import getRandomInt from './getRandomInt'\n\nfunction randomBetween(x){\n    let numb = getRandomInt(x)\n    if ( numb > 13 || numb < -13 ){\n      return numb\n    }\n    else {\n      randomBetween(x)\n    }\n}\n\nexport default randomBetween","import * as THREE from 'three'\nimport React, { useRef, Component, useState } from 'react'\nimport { useGLTF } from \"@react-three/drei\";\nimport { a } from 'react-spring/three'\nimport getRandomInt from './utils/getRandomInt'\nimport randomBetween from './utils/randomBetween'\n\nfunction Feuillage(props, color, numbertrees) {\n    console.log(props.color)\n\n    var treepositions = []\n    for (let i = 0; i < props.numbertrees; i++) {\n        let treeNewPosX = randomBetween(45);\n        let treeNewPosZ = getRandomInt(45); \n        let object = {\n          x: treeNewPosX,\n          y: 8,\n          z: treeNewPosZ\n        } \n        treepositions.push(object)\n    }\n\n    const grouptrees = useRef();\n\n    //Basic expand state\n    const [expand, setExpand] = useState(false);\n  \n    return  (\n      <group ref={grouptrees}>\n        { treepositions.map((d, index) =>  (\n        <a.mesh\n          position={[d.x, d.y, d.z]}\n          key={index}\n          onClick={() => setExpand(!expand)}\n          scale={[ 5, 15, 5 ]}\n          castShadow>\n          <coneBufferGeometry attach=\"geometry\" args={d.args} />\n          <a.meshPhysicalMaterial attach=\"material\" color={props.color} />\n        </a.mesh>\n      ))}\n      </group>\n    );\n}\n    \nclass Trees extends Component {\n    constructor(props){\n        super(props)\n    }\n    render(){\n        return(\n            <Feuillage numbertrees={300} color={this.props.treecolor}/>\n        )\n    }\n}\n\nexport default Trees;","import React, { useRef, useState, Component } from 'react'\nimport * as THREE from 'three'\nimport { useFrame } from 'react-three-fiber'\nimport JSONfont from \"../../fonts/Cocogoose.json\";\n\nfunction TextMesh(props, text, position, night) {\n    const [hovered, setHover] = useState(false);\n    const mesh = useRef();\n    console.log(\"PROPS TEXT : \"+props.text)\n    console.log(\"PROPS NIGHT : \"+props.night)\n    /*\n    let margin = 0;\n    for (let i=0; i < (props.text).length; i++ ){\n\n        margin = margin + 40\n    }\n    console.log(\"Margin \"+margin)*/\n\n    let color\n    if ( props.night == true ){\n        color = '#ffffff'\n    }\n    else{\n        color = '#37edcc'\n    }\n    // actions to perform in current frame\n    useFrame(() => {\n      //mesh.current.rotation.x = mesh.current.rotation.y += 0.01;\n      mesh.current.geometry.center();\n    });\n    \n    // load in font\n    const font = new THREE.FontLoader().parse(JSONfont);\n  \n    // configure font mesh\n    const textOptions = {\n      font,\n      size: 100,\n      height: hovered ? 0 : 0\n    };\n    //qqch qui ne se fait pas dans le update !!!!!!!!!!!\n  \n    return (\n      <mesh\n        ref={mesh}\n        onPointerOver={(e) => setHover(true)}\n        onPointerOut={(e) => setHover(false)}\n        position={[0, 0, -300]}\n      >\n        <textGeometry  attach=\"geometry\" args={[props.text, textOptions]} />\n        <meshBasicMaterial color={hovered ? color : color} />\n      </mesh>\n    );\n}\n\nclass Text extends Component {\n    constructor(props){\n        super(props)\n    }\n    render(){\n        return(\n            <TextMesh text={this.props.location} night={this.props.night}/>\n        )\n    }\n}\n\nexport default Text;","import React, { useRef, useState, Component } from 'react'\nimport { useFrame } from 'react-three-fiber'\n\nfunction Terrain(props, terraincolor) {\n    // This reference will give us direct access to the mesh\n    const meshterrain = useRef()\n    console.log(props.terraincolor)\n    // Set up state for the hovered and active state\n    const [hovered, setHover] = useState(false)\n    const [active, setActive] = useState(false)\n    // Rotate mesh every frame, this is outside of React without overhead\n    useFrame(() => {\n      //mesh.current.rotation.x = mesh.current.rotation.y += 0.01\n    })\n    return (\n      <mesh\n        {...props}\n        ref={meshterrain}\n        scale={active ? [1, 1, 1] : [1, 1, 1]}\n        onClick={(e) => setActive(!active)}\n        onPointerOver={(e) => setHover(true)}\n        onPointerOut={(e) => setHover(false)}>\n        <boxBufferGeometry args={[105, 3, 105]} />\n        <meshStandardMaterial color={props.terraincolor} />\n      </mesh>\n    )\n}\n\nfunction CornField(props, fieldcolor) {\n  // This reference will give us direct access to the mesh\n  const meshfield = useRef()\n  // Set up state for the hovered and active state\n  const [hovered, setHover] = useState(false)\n  const [active, setActive] = useState(false)\n  // Rotate mesh every frame, this is outside of React without overhead\n  useFrame(() => {\n    //mesh.current.rotation.x = mesh.current.rotation.y += 0.01\n  })\n  return (\n    <mesh\n      {...props}\n      ref={meshfield}\n      scale={active ? [1, 1, 1] : [1, 1, 1]}\n      onClick={(e) => setActive(!active)}\n      onPointerOver={(e) => setHover(true)}\n      onPointerOut={(e) => setHover(false)}>\n      <boxBufferGeometry args={[10, 4,40]} />\n      <meshStandardMaterial color={props.fieldcolor} opacity={[0.9]} transparent={[true]} />\n    </mesh>\n  )\n}\n\nfunction Road(props, roadcolor) {\n    // This reference will give us direct access to the mesh\n    const meshfield = useRef()\n\n    // Set up state for the hovered and active state\n    const [hovered, setHover] = useState(false)\n    const [active, setActive] = useState(false)\n    // Rotate mesh every frame, this is outside of React without overhead\n    useFrame(() => {\n      //mesh.current.rotation.x = mesh.current.rotation.y += 0.01\n    })\n    return (\n      <mesh\n        {...props}\n        ref={meshfield}\n        scale={active ? [1, 1, 1] : [1, 1, 1]}\n        onClick={(e) => setActive(!active)}\n        onPointerOver={(e) => setHover(true)}\n        onPointerOut={(e) => setHover(false)}>\n        <boxBufferGeometry args={[5, 0.3, 64]} />\n        <meshStandardMaterial color={props.roadcolor} />\n      </mesh>\n    )\n  }\n\nclass Map extends Component {\n    constructor(props){\n        super(props)\n    }\n    render(){\n        return(\n            <group>\n                <Terrain \n                    position={[0, 0, 0]} \n                    terraincolor = {this.props.terraincolor}\n                />\n                <CornField position={[-3, 2, 20]} fieldcolor={this.props.fieldcolor}/>\n                <Road position={[5, 2, 20]} roadcolor={this.props.roadcolor}/>\n            </group>\n        )\n    }\n}\n\nexport default Map;","import React, { useRef, Suspense, Component, useState } from 'react'\nimport { useGLTF } from \"@react-three/drei\";\nimport { useFrame } from 'react-three-fiber'\nimport * as THREE from 'three'\n//credit 3D https://sketchfab.com/ilyafom1\n\nconst playstatus = 0;\n\nfunction play(){\n    var audio = new Audio('musictest.mp3');\n    audio.play();\n}\n\nfunction Vinyl(props) {\n  const groupradio = useRef()\n  const { nodes, materials } = useGLTF('3DAssets/scene.gltf')\n  const [active, setActive] = useState(false)\n\n  useFrame(() => {\n    groupradio.current.rotation.y = groupradio.current.rotation.y += 0.01;\n  });\n\n  return (\n    <group \n    \n    ref={groupradio} \n    {...props} \n    dispose={null}\n    >\n      <group rotation={[-Math.PI / 2, 0, 0]}>\n        <group rotation={[Math.PI / 2, 0, 0]}\n        scale={active ? [1.25, 1.25, 1.25] : [1, 1, 1]}\n        onPointerOver={(e) => setActive(!active)}\n        onPointerOut={(e) => setActive(!active)}\n        onClick={(e) => play()}\n         >\n          <mesh material={materials['Material.001']} geometry={nodes.defaultMaterial.geometry} />\n          <mesh material={materials['Material.005']} geometry={nodes.defaultMaterial_1.geometry} />\n          <mesh material={materials['Material.004']} geometry={nodes.defaultMaterial_2.geometry} />\n          <mesh material={materials['Material.006']} geometry={nodes.defaultMaterial_3.geometry} />\n        </group>\n      </group>\n    </group>\n  )\n}\n\nuseGLTF.preload('3DAssets/scene.gltf')\n\n\nclass Disc extends Component {\n    constructor(props){\n        super(props)\n    }\n    render(){\n        return(\n          <Suspense fallback={null}>\n             <Vinyl position={[-100, 100, 10]} scale={[3, 3, 3]}/>\n          </Suspense>\n        )\n    }\n}\n\nexport default Disc;","import React, { useRef, Component, Suspense } from 'react'\nimport { useGLTF } from \"@react-three/drei\";\n\n//3D thanks : https://sketchfab.com/United4192\n\nfunction Flag(props) {\n  const group = useRef()\n  const { nodes, materials } = useGLTF('Americanflag.glb')\n  return (\n    <group ref={group} {...props} dispose={null}>\n      <mesh material={materials.FlagBrown} geometry={nodes.Post_Cylinder.geometry} rotation={[Math.PI / 2, 0, 0]} />\n      <mesh material={materials.FlagRed} geometry={nodes.BlankFlag_Cube.geometry} rotation={[Math.PI / 2, 0, 0]} />\n      <mesh\n        material={materials.FlagWhite}\n        geometry={nodes.WhiteStripes_Cube001.geometry}\n        rotation={[Math.PI / 2, 0, 0]}\n      />\n      <mesh material={materials.FlagBlue} geometry={nodes.Blue_Cube002.geometry} rotation={[Math.PI / 2, 0, 0]} />\n      <mesh material={materials.FlagWhite} geometry={nodes.Stars_Plane.geometry} rotation={[Math.PI / 2, 0, 0]} />\n    </group>\n  )\n}\n\nuseGLTF.preload('/Americanflag.glb')\n\nclass AmericanFlag extends Component {\n    constructor(props){\n        super(props)\n    }\n    render(){\n        return(\n          <Suspense fallback={null}>\n             <Flag position={[12, 20, 40]} scale={[3, 3, 3]}/>\n          </Suspense>\n        )\n    }\n}\n\nexport default AmericanFlag;","import React, { useRef, useState, Component } from 'react'\nimport * as THREE from 'three'\nimport { Canvas, useFrame } from 'react-three-fiber'\nimport { softShadows, Sky, Stars, OrbitControls } from \"@react-three/drei\"\nimport { useSpring, a } from 'react-spring/three'\nimport JSONfont from \"../fonts/Cocogoose.json\"\nimport axios from 'axios'\n\n//JSX\nimport Farm from \"./three/Farm.jsx\"\nimport Twitter from \"./three/TwitterBird.jsx\"\nimport Trees from \"./three/Feuillage.jsx\"\nimport Text from \"./three/Text.jsx\"\nimport Map from \"./three/Map.jsx\"\nimport Disc from \"./three/Disc.jsx\"\nimport AmericanFlag from \"./three/AmericanFlag.jsx\"\n\nvar night = false\n//const hourtest = 12\n\nfunction azimuth(){\n  //Get current geographic hour\n  var d = new Date();\n  //get current hour\n  var currenthour = d.getHours();\n  //console.log(\"CurrentHour :\"+currenthour)\n  //get by API\n  let daystart = 6; //heure de début de journée\n  let daylength = Math.round(12) //longueur du jour\n\n  //currenthour = hourtest\n\n  //Ex : Valeur de départ Azimuth: 0.1171\n  //Ex : Valeur de fin Azimuth: 0.3882\n  //Ex : longueur totale de la translation d'azimuth : 0.3882 - 0.1171\n  let total = 0.5\n\n  //déclaration de la valeur courante\n  let azimuthNow\n\n  azimuthNow = (total * (currenthour-daystart))/daylength\n\n  //sets night to true if night it is\n  if ( (currenthour > (daylength + daystart)-1)||(currenthour < daystart) ){\n    night = true\n  }\n  else\n  {\n    night = false\n  }\n\n  //console.log(azimuthNow)\n  //console.log(\"AZIMUTH NOW: \"+azimuthNow)\n  return azimuthNow\n}\n\nfunction inclination(props){\n  console.log(\"DATA :\"+props)\n  //Get current geographic hour\n  var d = new Date();\n  //get current hour\n  var currenthour = d.getHours();\n  //console.log(n)\n\n  //get by API\n  let daystart = 6; //heure de début de journée\n  let daylength = Math.round(12) //longueur du jour\n  let noon = daylength/2 + daystart //midi = la moitié de la journée de soleil + l'heure de démarrage\n  //soit pour un jour d'ensoleillement de 11h = 11/2 + 6 = 11.5\n\n  //currenthour = hourtest\n\n  //Ex : Valeur de départ Inclination: 0.1171\n  //Ex : Valeur de fin Inclination: 0.3882\n  //Ex : longueur totale de la translation d'azimuth : 0.3882 - 0.1171\n  let total = 0.5 - 0.388\n\n  //déclaration de la valeur courante\n  let inclinationNow\n\n  if (currenthour < noon) {\n    inclinationNow = (currenthour - daystart) * total / (daylength/2);\n  }\n  else\n  {\n    let diffHour = noon - (currenthour - noon)\n    inclinationNow = (diffHour - daystart) * total / (daylength/2);\n  }\n\n  //console.log(\"INCLINATION NOW: \"+inclinationNow + 0.50)\n  return inclinationNow + 0.50\n  /*\n  azimuth\n  0.1171\n  0.3882\n\n  inclination\n  0.5\n  0.388\n  0.5\n\n  exposure\n  0.1171   */\n}\n\n// soft Shadows\nsoftShadows();\n\n//globals\nvar forestNumber = []\nconst numbertrees = 300\nconst numberclouds = 100\n\nconst Rain = ({ position, color, args, numberrain }) => {\n\n  var rainpositions = []\n  for (let i = 0; i < numberrain; i++) {\n      let rainNewPosX = getRandomInt(45);\n      let rainNewPosZ = getRandomInt(45); \n      let object = {\n        x: rainNewPosX,\n        y: 40+getRandomInt(10),\n        z: rainNewPosZ\n      }\n      rainpositions.push(object)\n  }\n\n\n  //ref to target the mesh\n  const grouprain = useRef();\n\n  //useFrame allows us to re-render/update on each frame\n  useFrame(() => {\n    if (grouprain.current == null ){\n      //console.log(\"grouprain null\")\n    }\n    else\n    {\n      if (grouprain.current.position.y >= -40){\n        grouprain.current.position.y = grouprain.current.position.y -= 1.2\n      }\n      else\n      {\n        grouprain.current.position.y = 5;\n      }\n    }\n  });\n\n  //Basic expand state\n  const [expand, setExpand] = useState(false);\n  // React spring expand animation\n  const props = useSpring({\n    scale: expand ? [1.4, 1.4, 1.4] : [1, 1, 1],\n  });\n  return  (\n    <group ref={grouprain}>\n      { rainpositions.map((d, index) =>  (\n      <a.mesh\n        position={[d.x, d.y, d.z]}\n        key={index}\n        onClick={() => setExpand(!expand)}\n        scale={props.scale}\n        castShadow>\n        <boxBufferGeometry attach='geometry' args={args} />\n        <meshBasicMaterial color={color} />\n      </a.mesh>\n    ))}\n    </group>\n  );\n};\n\nconst Snow = ({ position, color, args, numbersnow }) => {\n\n  var snowpositions = []\n  for (let i = 0; i < numbersnow; i++) {\n      let snowNewPosX = getRandomInt(45);\n      let snowNewPosZ = getRandomInt(45); \n      let object = {\n        x: snowNewPosX,\n        y: 40+getRandomInt(10),\n        z: snowNewPosZ\n      }\n      snowpositions.push(object)\n  }\n\n\n  //ref to target the mesh\n  const groupsnow = useRef();\n\n  //useFrame allows us to re-render/update on each frame\n  useFrame(() => {\n    if (groupsnow.current == null ){\n      console.log(\"groupsnow null\")\n    }\n    else\n    {\n      if (groupsnow.current.position.y >= -40){\n        groupsnow.current.position.y = groupsnow.current.position.y -= 1.2\n      }\n      else\n      {\n        groupsnow.current.position.y = 5;\n      }\n    }\n  });\n\n  //Basic expand state\n  const [expand, setExpand] = useState(false);\n  // React spring expand animation\n  const props = useSpring({\n    scale: expand ? [1.4, 1.4, 1.4] : [1, 1, 1],\n  });\n  return  (\n    <group ref={groupsnow}>\n      { snowpositions.map((d, index) =>  (\n      <a.mesh\n        position={[d.x, d.y, d.z]}\n        key={index}\n        onClick={() => setExpand(!expand)}\n        scale={props.scale}\n        castShadow>\n        <sphereBufferGeometry attach='geometry' args={args} />\n        <meshBasicMaterial color={color} />\n      </a.mesh>\n    ))}\n    </group>\n  );\n};\n\nfunction Clouds(props, color, number) {\n\n  var cloudpositions = []\n  for (let i = 0; i < props.number; i++) {\n      let cloudNewPosX = getRandomInt(45);\n      let cloudNewPosY = 50+getRandomInt(15); \n      let cloudNewPosZ = getRandomInt(45);\n      let object = {\n        x: cloudNewPosX,\n        y: cloudNewPosY,\n        z: cloudNewPosZ\n      } \n      cloudpositions.push(object)\n  }\n\n  const groupclouds = useRef();\n\n  //Basic expand state\n  const [expand, setExpand] = useState(false);\n\n  return  (\n    <group ref={groupclouds}>\n      { cloudpositions.map((d, index) =>  (\n      <a.mesh\n        position={[d.x, d.y, d.z]}\n        key={index}\n        onClick={() => setExpand(!expand)}\n        scale={[ 20, 8, 20 ]}\n        castShadow\n        receiveshadow>\n        <boxBufferGeometry attach=\"geometry\" args={d.args} />\n        <a.meshPhysicalMaterial attach=\"material\" color={props.color} roughness={0} opacity={0.8} transparent={true} />\n      </a.mesh>\n    ))}\n    </group>\n  );\n}\n/*\nfunction Dolly() {\n  // This one makes the camera move in and out\n  useFrame(({ camera }) => {\n    camera.position.z = 200\n  })\n  return null\n}*/\n\nfunction Lights() {\n  return (\n    <group>\n      <pointLight intensity={1} />\n      <ambientLight intensity={0.3} />\n      <spotLight\n        castShadow\n        intensity={0.1}\n        angle={Math.PI / 7}\n        position={[150, 150, 250]}\n        penumbra={1}\n        shadow-mapSize-width={2048}\n        shadow-mapSize-height={2048}\n      />\n    </group>\n  )\n}\n\n\nfunction getRandomInt(max) {\n  return Math.floor(Math.random() * Math.floor(max)) - Math.floor(Math.random() * Math.floor(max));\n}\n\nclass Home extends Component {\n    constructor(props){\n        super(props)\n    }\n    state = {\n      persons: []\n    }\n    async componentDidMount() {\n\n      var body = JSON.stringify({\"city\":\"lyon\"});\n      // https://api.openweathermap.org/data/2.5/weather?q=toronto&appid=8d23c2c814d8bc6ea19d77c49f3cc746\n      var config = {\n        method: 'get',\n        url: 'http://localhost:8087/weather',\n        headers: { \n          'Content-Type': 'application/json'\n        },\n        data : body\n      };\n      await axios(config).then(function (response) {\n        console.log(JSON.stringify(response.data));\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n    }\n    render(){\n        return(\n            <Canvas style={{height:\"100vh\",width:\"100vw\",backgroundColor:\"#abfff5\"}}>\n            <Sky\n              distance={45000} // Camera distance (default=450000)\n              inclination={inclination(this.state.meteo)} // Sun elevation angle from 0 to 1 (default=0)\n              azimuth={azimuth()} // Sun rotation around the Y axis from 0 to 1 (default=0.25)\n              turbidity={20}\n              rayleigh={4}\n              exposure={1000}\n            />\n            <Lights />\n            <OrbitControls minDistance={[100]} maxDistance={[300]}/>\n            <Trees treecolor={this.props.treecolor}/>\n            <Clouds color={this.props.cloudscolor} number={this.props.numberclouds}/>\n            <Text location={this.props.location} night={night}/>\n            <Snow\n                color='white'\n                args={[1, 1, 1]}\n                numbersnow = {this.props.snow}\n            />\n            <Rain\n                color='grey'\n                args={[0.3, 10, 0.3]}\n                numberrain = {this.props.rain}\n            />\n            <Map \n              terraincolor={this.props.terraincolor} \n              fieldcolor={this.props.fieldcolor}\n              roadcolor={this.props.roadcolor}\n            />\n            {night = true &&\n              <Stars\n                radius={200} // Radius of the inner sphere (default=100)\n                depth={50} // Depth of area where stars should fit (default=50)\n                count={5000} // Amount of stars (default=5000)\n                factor={4} // Size factor (default=4)\n                saturation={0} // Saturation 0-1 (default=0)\n                fade // Faded dots (default=false)\n              />\n            }\n              <Farm />\n              <Twitter />\n              <Disc />\n              <AmericanFlag/>\n          </Canvas>\n        )\n    }\n}\n\nexport default Home;\n\n/*<Stars\nradius={100} // Radius of the inner sphere (default=100)\ndepth={50} // Depth of area where stars should fit (default=50)\ncount={5000} // Amount of stars (default=5000)\nfactor={4} // Size factor (default=4)\nsaturation={0} // Saturation 0-1 (default=0)\nfade // Faded dots (default=false)\n\n  \n            <Farm />\n\n            <Rain\n                color='grey'\n                args={[0.3, 10, 0.3]}\n                numberrain = {this.props.rain}\n            />\n            <Snow\n                color='white'\n                args={[1, 1, 1]}\n                numbersnow = {this.props.snow}\n            />\n            <Suspense fallback={null}>\n              <TwitterBird position={[100, 100, 10]} rotation={[-0.5, 0.5, 0]}/>\n            </Suspense>\n<Groupfarm scale={[0.02, 0.02, 0.02]} position={[3, 5, -3]}/>\n            \n\n/>*/","import React, { Component } from \"react\";\nimport { connect } from 'react-redux';\n\nclass ThreeGui extends Component {\n  constructor(props){\n    super(props)\n  }\n  render() {\n    return (\n      <div>\n        <h1>{this.props.rain}</h1>\n        test\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    rain: state.rain\n  }\n}\nexport default connect(mapStateToProps)(ThreeGui)","export const INCREMENT_RAIN = \"frontwidgets/rain/INCREMENT\"\nexport const DECREMENT_RAIN = \"frontwidgets/rain/DECREMENT\"\n\nconst counterReducer = ( state={\n    snow: 7,\n    rain: 12,\n    trees: 23,\n    clouds: 40\n}, action ) => {\n    switch(action.type){\n      case INCREMENT_RAIN:\n        return {\n            ...state, rain: state.rain+10\n        }\n      case DECREMENT_RAIN:\n        return {\n            ...state, rain: state.rain-10\n        }  \n      default:\n        return state\n    }\n}\n\nexport default counterReducer\n\nexport function incrementRain(){\n    return {\n        type: INCREMENT_RAIN\n    }\n}\n\nexport function decrementRain(){\n    return {\n        type: INCREMENT_RAIN\n    }\n}","const loggedReducer = (state = false, action) => {\n    switch(action.type){\n        case 'SIGN_IN':\n          return !state\n        default:\n          return state\n    }\n}\n\nexport default loggedReducer","import React, { Component } from 'react';\nimport Home from './components/Home.jsx';\nimport ThreeGui from './components/ThreeGui';\nimport { createStore } from 'redux'\nimport  allReducers  from './reducers'\nimport { Provider } from 'react-redux'\nimport counterReducer from './reducers/counter'\n\nconst store = createStore(counterReducer)\n\nclass App extends Component {\n  constructor(props){\n    super(props)\n    this.state = {\n      snow: 0,\n      terraincolor: '#667306',\n      fieldcolor: '#f5be18',\n      treecolor: '#076931',\n      rain: 0,\n      state: 0,\n      numberclouds: 0,\n      location: 'LYON',\n      roadcolor: '#544c3e'\n    }\n\n    this.handleButtonSnow = this.handleButtonSnow.bind(this)\n    this.handleButtonRain = this.handleButtonRain.bind(this)\n  }\n  handleButtonSnow(){\n    if ( this.state.snow == 0 ){\n      this.setState({\n        snow: 100,\n        terraincolor: '#ffffff',\n        fieldcolor: '#dedede',\n        treecolor: '#ffffff',\n        state: 1,\n        numberclouds: 50,\n        cloudscolor: '#ffffff',\n        roadcolor: '#ffffff'\n      })\n    }\n    else\n    {\n      this.setState({\n        snow: 0,\n        terraincolor: '#516e20',\n        fieldcolor: '#fcc305',\n        treecolor: '#006335',\n        numberclouds: 0,\n        cloudscolor: '#ffffff',\n        roadcolor: '#544c3e'\n      })\n    }\n  }\n  handleButtonRain(){\n    if ( this.state.rain == 0 ){\n      this.setState({\n        rain: 100,\n        terraincolor: '#095c02',\n        fieldcolor: '#542704',\n        treecolor: '#024712',\n        numberclouds: 50,\n        cloudcolors: '#ffffff'\n      })\n    }\n    else\n    {\n      this.setState({\n        rain: 0,\n        numberclouds: 0,\n        terraincolor: '#516e20',\n        fieldcolor: '#fcc305',\n        treecolor: '#006335',\n        numberclouds: 0,\n        cloudscolor: '#ffffff'\n      })\n    }\n  }\n  render() {\n    return (\n      <Provider store={store}>\n        <div className=\"App\">\n          <h1>{this.state.snow}</h1>\n          <ThreeGui/>\n          <button onClick={this.handleButtonSnow}>Snow</button>\n          <button onClick={this.handleButtonRain}>Rain</button>\n          <Home \n            snow={this.state.snow}\n            rain={this.state.rain}\n            terraincolor={this.state.terraincolor}\n            state={this.state.state}\n            fieldcolor={this.state.fieldcolor}\n            treecolor={this.state.treecolor}\n            numberclouds={this.state.numberclouds}\n            cloudscolor={this.state.cloudcolors}\n            location={this.state.location}\n            roadcolor={this.state.roadcolor}\n          />\n        </div>\n      </Provider>\n    )\n  }\n}\nexport default App;","import counterReducer from './counter'\nimport loggedReducer from './isLogged'\nimport { combineReducers } from 'redux'\n\nconst allReducers = combineReducers({\n    counter: counterReducer,\n    isLogged: loggedReducer\n})\n\nexport default allReducers","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport App from './App'\nimport { ActionCreators } from 'redux-devtools';\n\n\n//STORE : Globalized state\n/*\n//ACTION INCREMENT\nconst increment = () => {\n  return {\n    type: 'INCREMENT'\n  }\n}\n//DECREMENT\nconst decrement = () => {\n  return {\n    type: 'DECREMENT'\n  }\n}\n//REDUCER\nconst counter = ( state = 0, action ) =>{\n  switch(action.type){\n    case \"INCREMENT\":\n      return state+10\n    case \"DECREMENT\":\n      return state-10\n  }\n} \n\nlet store = createStore(counter)\n\n//display in console\nstore.subscribe(() => console.log(store.getState()))\n\nstore.dispatch(increment())\nstore.dispatch(decrement())\n*/\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n//Other components     <ThreedBackground />\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}